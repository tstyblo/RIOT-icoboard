/*
 * Copyright (C) 2020 Tomas Styblo
 *
 * This file is subject to the terms and conditions of the GNU Lesser
 * General Public License v2.1. See the file LICENSE in the top level
 * directory for more details.
 */

/**
 * @defgroup    boards_icosoc icoBoard with icoSoC and picorv32 core
 * @ingroup     boards_icosoc
 * @brief       Support for icoBoard with icoSoC and picorv32 core
 * @author      Tomas Styblo <tstyblo@gmail.com>

### Overview

First, you will have to get the icosoc code from github and patch it using the following patch:

boards/icosoc/dist/icosoc-riot-icoboard-all.patch

Then follow the instructions in the icosoc documentation to install the riscv-gnu-toolchain.

Add the appropriate directory (eg. /opt/riscv32ic/bin) to your PATH.

Then you can create icosoc.bin by running "make icosoc.bin" in "examples/riotos" in the patched icosoc distribution.

When that is finished you must program icosoc.bin into the flash memory of your board:

# icoprog -f < icosoc.bin

This is needed only the first time.

Then you can use the following to compile and load the RIOT OS example apps into the flash memory and to run them:

# export BOARD=icosoc
# make flash
# make reset
# make term

Only flash memory programming is supported when using the standard build targets.

You can test it with one of the examples and tests that already work,
eg. "examples/filesystem" ("ps", "help", "cat /const/hello-world", "format", "mount", "vfs df", 
"tee /sda/x.txt Hello", "ls /sda", ...), or "tests/thread_msg", "tests/thread_cooperation".

*/
